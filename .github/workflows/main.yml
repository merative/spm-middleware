---
# This is a basic workflow to help you get started with Actions

name: ci

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events
  # but only for the main branch
  push:
    branches: [main]
  pull_request:
    branches: ['*']

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs
# that can run sequentially or in parallel
jobs:
  ci:
    env:
      ARTIFACTORY_TOKEN: "${{ secrets.ARTIFACTORY_TOKEN }}"
      ARTIFACTORY_REPO: "${{ secrets.ARTIFACTORY_REPO }}"
      ARTIFACTORY_URL: "${{ secrets.ARTIFACTORY_URL }}"
      CUSTOM_CHECKOUT_LOC: "repo"
      python_ver: "3.10"
    runs-on: ubuntu-22.04
    strategy:
      fail-fast: false
      matrix:
        scenario:
          - ihs-v90-rockylinux8
          - ihs-v90-rockylinux9
          - websphere-v90-rockylinux8
          - websphere-v90-rockylinux9
          - db21212
          - db21159
          - ohs-12214-rockylinux8
          - ohs-12214-rockylinux9
          - weblogic-12214-rockylinux8
          - weblogic-12214-rockylinux9
          - weblogic-1411-rockylinux8
          - weblogic-1411-rockylinux9
          - weblogic-1412-rockylinux8
          - weblogic-1412-rockylinux9
          - oracle-19c-rockylinux8
          - oracle-19c-rockylinux9
          - iim-191-rockylinux8
          - iim-191-rockylinux9
          - liberty-jdk8-rockylinux8
          - liberty-jdk8-rockylinux9
          - liberty-jdk21-rockylinux8
          - liberty-jdk21-rockylinux9
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          path: ${{ env.CUSTOM_CHECKOUT_LOC }}
      - name: Setup Python v${{ env.python_ver }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.python_ver }}
          cache: 'pip'
      # remove android and dotnet to gain more spaces for oracle installation
      - name: Maximize build space
        run: |
          ls
          ls -la "${{ env.CUSTOM_CHECKOUT_LOC }}"
          df -h
          sudo rm -rf /usr/local/lib/android
          sudo rm -rf /usr/share/dotnet
          df -h
      - name: Install dependencies
        run: |
          cd ${{ env.CUSTOM_CHECKOUT_LOC }}
          python -m pip install -U pip
          python -m pip install -r ci-requirements.txt
      - name: Prepare environment
        run: |
          cd ${{ env.CUSTOM_CHECKOUT_LOC }}
          export COLLECTION_NAMESPACE=$(yq e '.namespace' galaxy.yml)
          export COLLECTION_NAME=$(yq e '.name' galaxy.yml)
          export COLLECTION_VERSION=$(yq e '.version' galaxy.yml)
          export NEW_REPO_LOC=ansible_collections/$COLLECTION_NAMESPACE/$COLLECTION_NAME
          echo "NEW_REPO_LOC=$NEW_REPO_LOC" >> $GITHUB_ENV
          # export REPO_CLONE_FOLDERNAME=${PWD##*/}
          # Create folder structure required by ansible-test and other tooling
          cd ..
          mkdir -p ansible_collections/$COLLECTION_NAMESPACE
          mv ${{ env.CUSTOM_CHECKOUT_LOC }} ansible_collections/$COLLECTION_NAMESPACE/$COLLECTION_NAME
          cd ansible_collections/$COLLECTION_NAMESPACE/$COLLECTION_NAME
          ls -la
          # Fake install cloned collection (required for molecule)
          mkdir -p $HOME/.ansible/collections/$COLLECTION_NAMESPACE
          ln -s ansible_collections/$COLLECTION_NAMESPACE/$COLLECTION_NAME $HOME/.ansible/collections/$COLLECTION_NAMESPACE/$COLLECTION_NAME  
    
      # - name: Sanity checks
      #   run: |
      #     ansible-test sanity --docker -v --color --python ${{ env.python_ver }}

      - name: Molecule
        run: |
          cd ${{ env.NEW_REPO_LOC }}

          export DEFAULT_MODULE_PATH=$(pwd)/plugins/modules
          echo "DEFAULT_MODULE_PATH: $DEFAULT_MODULE_PATH"
          ls -la
          molecule test -s ${{ matrix.scenario }}
